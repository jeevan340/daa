1)#include<stdio.h>
int factorial(int n)
{
	if(n==0)
	
		return 1;
	
	else
	
		return (factorial(n-1)*n);
	
	
}
int main()
{
	int number;
	int fact;
	printf("enter the value of n:");
	scanf("%d",&number);
	fact=factorial(number);
	printf("%d",fact);
}

2)#include <stdio.h>
int max(int a, int b) { return (a > b) ? a : b; }
int knapSack(int W, int wt[], int val[], int n)
{
	if (n == 0 || W == 0)
		return 0;
	if (wt[n - 1] > W)
		return knapSack(W, wt, val, n - 1);
	else
		return max(
			val[n - 1]
				+ knapSack(W - wt[n - 1], wt, val, n - 1),
			knapSack(W, wt, val, n - 1));
}
int main()
{
	int profit[] = { 60, 100, 120 };
	int weight[] = { 10, 20, 30 };
	int W = 50;
	int n = sizeof(profit) / sizeof(profit[0]);
	printf("%d", knapSack(W, weight, profit, n));
	return 0;
}

3)#include<stdio.h>
#include<stdbool.h> 
#define INF 9999999

#define V 5

int G[V][V] = {
  {0, 9, 75, 0, 0},
  {9, 0, 95, 19, 42},
  {75, 95, 0, 51, 66},
  {0, 19, 51, 0, 31},
  {0, 42, 66, 31, 0}};

int main() {
  int no_edge;  
  int selected[V];

  memset(selected, false, sizeof(selected));
  
  no_edge = 0;

  selected[0] = true;

  int x;  
  int y;  

  printf("Edge : Weight\n");

  while (no_edge < V - 1) {
    int min = INF,i,j;
    x = 0;
    y = 0;

    for (i = 0; i < V; i++) {
      if (selected[i]) {
        for (j = 0; j < V; j++) {
          if (!selected[j] && G[i][j]) { 
            if (min > G[i][j]) {
              min = G[i][j];
              x = i;
              y = j;
            }
          }
        }
      }
    }
    printf("%d - %d : %d\n", x, y, G[x][y]);
    selected[y] = true;
    no_edge++;
  }

  return 0;
}

4)#include <stdio.h>

int isPerfect(int num) {
    int sum = 1,i; 
    for ( i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            if (i * i != num) {
                sum = sum + i + num / i;
            } else {
                sum = sum + i;
            }
        }
    }
    return sum == num;
}

int main() {
    int n;
    
    printf("Enter the value of n: ");
    scanf("%d", &n);
    
    int count = 0; 
    int num = 2;  

    printf("The first %d perfect numbers are:\n", n);

    while (count < n) {
        if (isPerfect(num)) {
            printf("%d\n", num);
            count++;
        }
        num++;
    }

    return 0;
}


5)// C Program to find the sum of
// even-indices Fibonacci numbers
#include <stdio.h>
 

int calculateEvenSum(int n)
{

    if (n <= 0)
        return 0;
 
    int fibo[2 * n + 1];
    fibo[0] = 0, fibo[1] = 1;
 

    int sum = 0,i;
 

    for ( i = 2; i <= 2 * n; i++) {
        fibo[i] = fibo[i - 1] + fibo[i - 2];

        if (i % 2 == 0)
            sum += fibo[i];
    }

    return sum;
}
 

int main()
{
 
   
    int n;
 	printf("enter the number:");
 	scanf("%d",&n);
    
    
    int sum = calculateEvenSum(n);
 
    
    printf("Even indexed Fibonacci Sum upto %d terms = %d",
           n, sum);

}

6)#include <stdio.h>  
  
void selection(int arr[], int n)  
{  
    int i, j, small;  
      
    for (i = 0; i < n-1; i++)   
    {  
        small = i;
        for (j = i+1; j < n; j++)  
        if (arr[j] < arr[small])  
            small = j;  
 
    int temp = arr[small];  
    arr[small] = arr[i];  
    arr[i] = temp;  
    }  
}  
  
void printArr(int a[], int n) 
{  
    int i;  
    for (i = 0; i < n; i++)  
        printf("%d ", a[i]);  
}  
  
int main()  
{  
    int a[] = { 10,5, 80,-2, 15,23, 45 };  
    int n = sizeof(a) / sizeof(a[0]);  
    printf("Before sorting array elements are - \n");  
    printArr(a, n);  
    selection(a, n);  
    printf("\nAfter sorting array elements are - \n");    
    printArr(a, n);  
    return 0;  
}    

7)#include<stdio.h>
int main(){
   int number,i,result=0;
   printf("enter the number:");
   scanf("%d",&number);
   for(i=1;i<=number;i++){
      if(number%i==0)
         result=result+i;
   }
   if(result==2*number) 
      printf("true");
   else
      printf("false");
}

8)#include <stdio.h>
#include <string.h>
 
int main()
{
    char s[1000];  
    int i,n,c=0;
 
    printf("Enter  the string : ");
    gets(s);
    n=strlen(s);
 
    for(i=0;i<n/2;i++)  
    {
    	if(s[i]==s[n-i-1])
    	c++;
 
 	}
 	if(c==i)
 	    printf("string is palindrome");
    else
        printf("string is not palindrome");
 
 	 
     
    return 0;
}